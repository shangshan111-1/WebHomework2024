---
import MarkdownPost from "../../../src/layouts/MarkdownPostFor[id].astro";
import {marked} from 'marked';
import Footer from "../../../src/components/Footer.astro";
import Header from "../../../src/components/Header.astro";
import BaseHead from "../../../src/components/BaseHead.astro";
import BaseHead from "../../../src/components/Navigation.astro";

// 获取所有文章的路径，以用于生成静态路径
export async function getStaticPaths() {
    const response = await fetch('http://localhost:8000/api/posts/');
    const posts = await response.json();

    return posts.map(post => ({
        params: {id: post.id.toString()}
    }));
}

// 从Astro.params中获取当前文章的ID
const {id} = Astro.params;

// 初始化文章对象
let post = {};

const formatDate = (dateString) => {
    const date = new Date(dateString);
    const year = date.getFullYear();
    const month = date.getMonth() + 1; // 月份从0开始，需要加1
    const day = date.getDate();
    return `${year} 年 ${month} 月 ${day} 日`;
};

// 获取单个文章的详细信息
const fetchPost = async () => {
    const response = await fetch(`http://localhost:8000/api/posts/${id}/`);
    post = await response.json();
    post.formatted_pub_date = formatDate(post.pub_date);


};

// 执行获取文章详情的函数
await fetchPost();

// 准备 frontmatter 对象
const frontmatter = {
    title: post.title,
    pubDate: post.pub_date,
    description: post.description,
    featured: post.featured || false,
    tags: post.tags.split(','),
    author: post.author,
    theme: post.theme || 'light',
    cover: {url: post.cover_url || ''},
};
post.tags = post.tags.split(',')
// 解析Markdown内容为HTML
const contentHtml = marked(post.content || '');
---

<MarkdownPost frontmatter={frontmatter}>

    {post.featured && (
    <style>
        .container {
            position: relative;
            text-align: center;
            color: white;
            height: 100vh;
        }
        .background-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .container::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5); /* 半透明背景层 */
            z-index: 1;
        }
        .centered-text, .sub-text {
            position: absolute;
            z-index: 2; /* 确保文字在背景层之上 */
        }
        .centered-text {
            top: 36%;
            left: 50%;
            transform: translate(-50%, -50%);

            font-size: 64px;
            font-weight: 700;
            font-family: "SF Pro SC", "SF Pro Display", "SF Pro Icons", "PingFang SC", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
            line-height: 1.09375;
            letter-spacing: 0em;
            text-align: center;
        }
        .sub-text {
            top: 46%;

            left: 50%;
            transform: translateX(-50%);


            margin-inline-start: auto;
            margin-inline-end: auto;
            font-size: 24px;
            line-height: 1.1666666667;
            font-weight: 600;
            letter-spacing: .009em;
            font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
            width: 66.6666666667%;
        }
    </style>

    <div class="container">
        <img src={post.cover_url}
             alt="Background Image" class="background-image">
        <div class="centered-text">{post.title}</div>
        <div class="sub-text">{post.description}
        </div>
    </div>



            <div class="tertiarynav component">
                <div class="component-content"></div>
            </div>
    )}

    <div class="tagssheet component">
        <div class="component-content">
            {post.tags.map(tag => (
                    <a href={`/tags/${encodeURIComponent(tag.trim())}`} class="tag">
                        {tag.trim()}
                    </a>
            ))}
        </div>
    </div>
    <div class="TextMain" set:html={contentHtml}/>
    <script>
        if (post.featured) {
            document.getElementById('image-container').classList.add('featured');
        }
    </script>


</MarkdownPost>